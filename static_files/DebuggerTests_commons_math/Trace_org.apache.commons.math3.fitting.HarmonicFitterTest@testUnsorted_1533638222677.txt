[inst2] + org.apache.commons.math3.fitting.HarmonicFitterTest@testUnsorted
[inst2] + org.apache.commons.math3.analysis.function.HarmonicOscillator@value
[inst2] + org.apache.commons.math3.util.FastMath@cos
[inst2] + org.apache.commons.math3.util.FastMath$CodyWaite@getK
[inst2] + org.apache.commons.math3.util.FastMath$CodyWaite@getRemA
[inst2] + org.apache.commons.math3.util.FastMath$CodyWaite@getRemB
[inst2] + org.apache.commons.math3.util.FastMath@cosQ
[inst2] + org.apache.commons.math3.util.FastMath@sinQ
[inst2] + org.apache.commons.math3.util.FastMath@polySine
[inst2] + org.apache.commons.math3.util.FastMath@polyCosine
[inst2] + org.apache.commons.math3.fitting.CurveFitter@getObservations
[inst2] + org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser@sortObservations
[inst2] + org.apache.commons.math3.fitting.WeightedObservedPoint@getX
[inst2] + org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser@guessAOmega
[inst2] + org.apache.commons.math3.fitting.WeightedObservedPoint@getY
[inst2] + org.apache.commons.math3.util.FastMath@sqrt
[inst2] + org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser@guessPhi
[inst2] + org.apache.commons.math3.util.FastMath@sin
[inst2] + org.apache.commons.math3.util.FastMath@atan2
[inst2] + org.apache.commons.math3.util.FastMath@doubleHighPart
[inst2] + org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser@guess
[inst2] + org.apache.commons.math3.fitting.HarmonicFitter@fit
[inst2] + org.apache.commons.math3.fitting.CurveFitter@fit
[inst2] + org.apache.commons.math3.fitting.WeightedObservedPoint@getWeight
[inst2] + org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction@getModelFunction
[inst2] + org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction@getModelFunctionJacobian
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@optimize
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer@optimize
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@optimize
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@optimize
[inst2] + org.apache.commons.math3.optim.BaseOptimizer@optimize
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@parseOptimizationData
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer@parseOptimizationData
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@parseOptimizationData
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@parseOptimizationData
[inst2] + org.apache.commons.math3.optim.BaseOptimizer@parseOptimizationData
[inst2] + org.apache.commons.math3.optim.MaxEval@getMaxEval
[inst2] + org.apache.commons.math3.util.Incrementor@setMaximalCount
[inst2] + org.apache.commons.math3.optim.InitialGuess@getInitialGuess
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@checkParameters
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.ModelFunction@getModelFunction
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.Target@getTarget
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.Weight@getWeight
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@copy
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@checkParameters
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@getColumnDimension
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian@getModelFunctionJacobian
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@squareRoot
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@getRowDimension
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@getEntry
[inst2] + org.apache.commons.math3.linear.MatrixUtils@checkMatrixIndex
[inst2] + org.apache.commons.math3.linear.MatrixUtils@checkRowIndex
[inst2] + org.apache.commons.math3.linear.MatrixUtils@checkColumnIndex
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@setEntry
[inst2] + org.apache.commons.math3.util.Incrementor@resetCount
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer@doOptimize
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer@checkParameters
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@getLowerBound
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@getUpperBound
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@getTarget
[inst2] + org.apache.commons.math3.optim.BaseMultivariateOptimizer@getStartPoint
[inst2] + org.apache.commons.math3.util.FastMath@min
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@getWeightSquareRoot
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@computeObjectiveValue
[inst2] + org.apache.commons.math3.optim.BaseOptimizer@incrementEvaluationCount
[inst2] + org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1@value
[inst2] + org.apache.commons.math3.fitting.CurveFitter@access$000
[inst2] + org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction@access$100
[inst2] + org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric@value
[inst2] + org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric@validateParameters
[inst2] + org.apache.commons.math3.analysis.function.HarmonicOscillator@access$000
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@computeResiduals
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@computeCost
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer@getWeight
[inst2] + org.apache.commons.math3.linear.ArrayRealVector@getDataRef
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@operate
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@multiply
[inst2] + org.apache.commons.math3.linear.MatrixUtils@checkMultiplicationCompatible
[inst2] + org.apache.commons.math3.linear.DiagonalMatrix@getDataRef
[inst2] + org.apache.commons.math3.linear.ArrayRealVector@dotProduct
[inst2] + org.apache.commons.math3.optim.BaseOptimizer@getConvergenceChecker
[inst2] + org.apache.commons.math3.optim.BaseOptimizer@incrementIterationCount
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@computeWeightedJacobian
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer@computeJacobian
[inst2] + org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2@value
[inst2] + org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric@gradient
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@copyIn
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@setSubMatrix
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@getRowDimension
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@getColumnDimension
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@getEntry
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer@qrDecomposition
[inst2] + org.apache.commons.math3.linear.AbstractRealMatrix@scalarMultiply
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@createMatrix
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@setEntry
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@getData
[inst2] + org.apache.commons.math3.linear.Array2DRowRealMatrix@copyOut
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer@qTy
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer@determineLMParameter
[inst2] + org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer@setCost
[inst2] + org.apache.commons.math3.optim.PointVectorValuePair@getPointRef
[inst2] + org.apache.commons.math3.util.Pair@getKey
[inst2] + org.apache.commons.math3.util.MathUtils@normalizeAngle
[inst2] + org.apache.commons.math3.util.FastMath@floor
