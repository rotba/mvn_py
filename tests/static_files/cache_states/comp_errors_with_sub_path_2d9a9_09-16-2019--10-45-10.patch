diff --git a/pom.xml b/pom.xml
index eef22e78e..585267182 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,555 +1,555 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<project
-    xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <parent>
-    <groupId>org.apache.commons</groupId>
-    <artifactId>commons-parent</artifactId>
-    <version>15</version>
-  </parent>
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>org.apache.commons</groupId>
-  <artifactId>commons-lang</artifactId>
-  <version>3.0-SNAPSHOT</version>
-  <name>Commons Lang</name>
-
-  <inceptionYear>2001</inceptionYear>
-    <description>
+<?xml version="1.0" ?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<parent>
+		<groupId>org.apache.commons</groupId>
+		<artifactId>commons-parent</artifactId>
+		<version>15</version>
+	</parent>
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>org.apache.commons</groupId>
+	<artifactId>commons-lang</artifactId>
+	<version>3.0-SNAPSHOT</version>
+	<name>Commons Lang</name>
+	<inceptionYear>2001</inceptionYear>
+	<description>
         Commons Lang, a package of Java utility classes for the
         classes that are in java.lang's hierarchy, or are considered to be so
         standard as to justify existence in java.lang.
     </description>
-
-  <url>http://commons.apache.org/lang/</url>
-
-  <issueManagement>
-    <system>jira</system>
-    <url>http://issues.apache.org/jira/browse/LANG</url>
-  </issueManagement>
-
-  <scm>
-    <connection>scm:svn:http://svn.apache.org/repos/asf/commons/proper/lang/trunk</connection>
-    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/commons/proper/lang/trunk</developerConnection>
-    <url>http://svn.apache.org/viewvc/commons/proper/lang/trunk</url>
-  </scm>
-
-    <developers>
-        <developer>
-            <name>Daniel Rall</name>
-            <id>dlr</id>
-            <email>dlr@finemaltcoding.com</email>
-            <organization>CollabNet, Inc.</organization>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Stephen Colebourne</name>
-            <id>scolebourne</id>
-            <email>scolebourne@joda.org</email>
-            <organization>SITA ATS Ltd</organization>
-            <timezone>0</timezone>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Henri Yandell</name>
-            <id>bayard</id>
-            <email>bayard@apache.org</email>
-            <organization/>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Steven Caswell</name>
-            <id>scaswell</id>
-            <email>stevencaswell@apache.org</email>
-            <organization/>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-            <timezone>-5</timezone>
-        </developer>
-        <developer>
-            <name>Robert Burrell Donkin</name>
-            <id>rdonkin</id>
-            <email>rdonkin@apache.org</email>
-            <organization/>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Gary D. Gregory</name>
-            <id>ggregory</id>
-            <email>ggregory@seagullsw.com</email>
-            <organization>Seagull Software</organization>
-            <timezone>-8</timezone>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Phil Steitz</name>
-            <id>psteitz</id>
-            <email>phil@steitz.com</email>
-            <organization/>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Fredrik Westermarck</name>
-            <id>fredrik</id>
-            <email/>
-            <organization/>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>James Carman</name>
-            <id>jcarman</id>
-            <email>jcarman@apache.org</email>
-            <organization>Carman Consulting, Inc.</organization>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Niall Pemberton</name>
-            <id>niallp</id>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Matt Benson</name>
-            <id>mbenson</id>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-        </developer>
-        <developer>
-            <name>Joerg Schaible</name>
-            <id>joehni</id>
-            <email>joerg.schaible@gmx.de</email>
-            <roles>
-                <role>Java Developer</role>
-            </roles>
-            <timezone>+1</timezone>
-        </developer>
-        <developer>
-          <name>Oliver Heger</name>
-          <id>oheger</id>
-          <email>oheger@apache.org</email>
-          <timezone>+1</timezone>
-          <roles>
-            <role>Java Developer</role>
-          </roles>
-        </developer>
-        <developer>
-          <name>Paul Benedict</name>
-          <id>pbenedict</id>
-          <email>pbenedict@apache.org</email>
-          <roles>
-            <role>Java Developer</role>
-          </roles>
-        </developer>
-    </developers>
-    <contributors>
-        <contributor>
-            <name>C. Scott Ananian</name>
-        </contributor>
-        <contributor>
-            <name>Chris Audley</name>
-        </contributor>
-        <contributor>
-            <name>Stephane Bailliez</name>
-        </contributor>
-        <contributor>
-            <name>Michael Becke</name>
-        </contributor>
-        <contributor>
-            <name>Benjamin Bentmann</name>
-        </contributor>
-        <contributor>
-            <name>Ola Berg</name>
-        </contributor>
-        <contributor>
-            <name>Nathan Beyer</name>
-        </contributor>
-        <contributor>
-            <name>Stefan Bodewig</name>
-        </contributor>
-        <contributor>
-            <name>Janek Bogucki</name>
-        </contributor>
-        <contributor>
-            <name>Mike Bowler</name>
-        </contributor>
-        <contributor>
-            <name>Sean Brown</name>
-        </contributor>
-        <contributor>
-            <name>Alexander Day Chaffee</name>
-        </contributor>
-        <contributor>
-            <name>Al Chou</name>
-        </contributor>
-        <contributor>
-            <name>Greg Coladonato</name>
-        </contributor>
-        <contributor>
-            <name>Maarten Coene</name>
-        </contributor>
-        <contributor>
-            <name>Justin Couch</name>
-        </contributor>
-        <contributor>
-            <name>Michael Davey</name>
-        </contributor>
-        <contributor>
-            <name>Norm Deane</name>
-        </contributor>
-        <contributor>
-            <name>Ringo De Smet</name>
-        </contributor>
-        <contributor>
-            <name>Russel Dittmar</name>
-        </contributor>
-        <contributor>
-            <name>Steve Downey</name>
-        </contributor>
-        <contributor>
-            <name>Matthias Eichel</name>
-        </contributor>
-        <contributor>
-            <name>Christopher Elkins</name>
-        </contributor>
-        <contributor>
-            <name>Chris Feldhacker</name>
-        </contributor>
-        <contributor>
-            <name>Pete Gieser</name>
-        </contributor>
-        <contributor>
-            <name>Jason Gritman</name>
-        </contributor>
-        <contributor>
-            <name>Matthew Hawthorne</name>
-        </contributor>
-        <contributor>
-            <name>Michael Heuer</name>
-        </contributor>
-        <contributor>
-            <name>Chris Hyzer</name>
-        </contributor>
-        <contributor>
-            <name>Marc Johnson</name>
-        </contributor>
-        <contributor>
-            <name>Shaun Kalley</name>
-        </contributor>
-        <contributor>
-            <name>Tetsuya Kaneuchi</name>
-        </contributor>
-        <contributor>
-            <name>Nissim Karpenstein</name>
-        </contributor>
-        <contributor>
-            <name>Ed Korthof</name>
-        </contributor>
-        <contributor>
-            <name>Holger Krauth</name>
-        </contributor>
-        <contributor>
-            <name>Rafal Krupinski</name>
-        </contributor>
-        <contributor>
-            <name>Rafal Krzewski</name>
-        </contributor>
-        <contributor>
-            <name>Craig R. McClanahan</name>
-        </contributor>
-        <contributor>
-            <name>Rand McNeely</name>
-        </contributor>
-        <contributor>
-            <name>Hendrik Maryns</name>
-        </contributor>
-        <contributor>
-            <name>Dave Meikle</name>
-        </contributor>
-        <contributor>
-            <name>Nikolay Metchev</name>
-        </contributor>
-        <contributor>
-            <name>Kasper Nielsen</name>
-        </contributor>
-        <contributor>
-            <name>Tim O'Brien</name>
-        </contributor>
-        <contributor>
-            <name>Brian S O'Neill</name>
-        </contributor>
-        <contributor>
-            <name>Andrew C. Oliver</name>
-        </contributor>
-        <contributor>
-            <name>Alban Peignier</name>
-        </contributor>
-        <contributor>
-            <name>Moritz Petersen</name>
-        </contributor>
-        <contributor>
-            <name>Dmitri Plotnikov</name>
-        </contributor>
-        <contributor>
-            <name>Neeme Praks</name>
-        </contributor>
-        <contributor>
-            <name>Eric Pugh</name>
-        </contributor>
-        <contributor>
-            <name>Stephen Putman</name>
-        </contributor>
-        <contributor>
-            <name>Travis Reeder</name>
-        </contributor>
-        <contributor>
-            <name>Antony Riley</name>
-        </contributor>
-        <contributor>
-            <name>Valentin Rocher</name>
-        </contributor>
-        <contributor>
-            <name>Scott Sanders</name>
-        </contributor>
-        <contributor>
-            <name>Ralph Schaer</name>
-        </contributor>
-        <contributor>
-            <name>Henning P. Schmiedehausen</name>
-        </contributor>
-        <contributor>
-            <name>Sean Schofield</name>
-        </contributor>
-        <contributor>
-            <name>Robert Scholte</name>
-        </contributor>
-        <contributor>
-            <name>Reuben Sivan</name>
-        </contributor>
-        <contributor>
-            <name>Ville Skytta</name>
-        </contributor>
-        <contributor>
-            <name>Jan Sorensen</name>
-        </contributor>
-        <contributor>
-            <name>Glen Stampoultzis</name>
-        </contributor>
-        <contributor>
-            <name>Scott Stanchfield</name>
-        </contributor>
-        <contributor>
-            <name>Jon S. Stevens</name>
-        </contributor>
-        <contributor>
-            <name>Sean C. Sullivan</name>
-        </contributor>
-        <contributor>
-            <name>Ashwin Suresh</name>
-        </contributor>
-        <contributor>
-            <name>Helge Tesgaard</name>
-        </contributor>
-        <contributor>
-            <name>Arun Mammen Thomas</name>
-        </contributor>
-        <contributor>
-            <name>Masato Tezuka</name>
-        </contributor>
-        <contributor>
-            <name>Jeff Varszegi</name>
-        </contributor>
-        <contributor>
-            <name>Chris Webb</name>
-        </contributor>
-        <contributor>
-            <name>Mario Winterer</name>
-        </contributor>
-        <contributor>
-            <name>Stepan Koltsov</name>
-        </contributor>
-        <contributor>
-            <name>Holger Hoffstatte</name>
-        </contributor>
-        <contributor>
-            <name>Derek C. Ashmore</name>
-        </contributor>
-    </contributors>
-
-  <!-- Lang should depend on very little -->
-  <dependencies>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>4.7</version>
-      <scope>test</scope>
-    </dependency>
-
-    <dependency>
-      <groupId>org.easymock</groupId>
-      <artifactId>easymock</artifactId>
-      <version>2.5.2</version>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
-    <maven.compile.source>1.5</maven.compile.source>
-    <maven.compile.target>1.5</maven.compile.target>
-    <commons.componentid>lang</commons.componentid>
-    <commons.release.version>2.5</commons.release.version>
-    <commons.jira.id>LANG</commons.jira.id>
-    <commons.jira.pid>12310481</commons.jira.pid>
-  </properties> 
-
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-surefire-plugin</artifactId>
-        <configuration>
-          <includes>
-            <include>**/*Test.java</include>
-          </includes>
-          <excludes>
-            <exclude>**/*TestSuite.java</exclude>
-            <exclude>**/AllLangTestSuite.java</exclude>
-          </excludes>
-        </configuration>
-      </plugin>
-      <plugin>
-        <artifactId>maven-assembly-plugin</artifactId>
-        <configuration>
-          <descriptors>
-            <descriptor>src/assembly/bin.xml</descriptor>
-            <descriptor>src/assembly/src.xml</descriptor>
-          </descriptors>
-          <tarLongFileMode>gnu</tarLongFileMode>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-
-  <reporting>
-    <plugins>
-        <plugin>
-          <groupId>org.apache.maven.plugins</groupId>
-          <artifactId>maven-changes-plugin</artifactId>
-          <version>2.0</version>
-          <configuration>
-            <xmlPath>${basedir}/src/site/changes/changes.xml</xmlPath>
-            <issueLinkTemplate>%URL%/%ISSUE%</issueLinkTemplate>
-          </configuration>
-          <reportSets>
-            <reportSet>
-              <reports>
-                 <report>changes-report</report>
-              </reports>
-            </reportSet>
-          </reportSets>
-        </plugin>
-      <plugin>
-        <artifactId>maven-checkstyle-plugin</artifactId>
-        <version>2.3</version>
-        <configuration>
-          <configLocation>${basedir}/checkstyle.xml</configLocation>
-          <enableRulesSummary>false</enableRulesSummary>
-        </configuration>
-      </plugin>
-      <!-- Requires setting 'export MAVEN_OPTS="-Xmx512m" ' -->
-      <plugin>
-        <groupId>org.codehaus.mojo</groupId>
-        <artifactId>findbugs-maven-plugin</artifactId>
-        <version>1.2</version>
-        <configuration>
-          <threshold>Normal</threshold>
-          <effort>Default</effort>
-          <excludeFilterFile>${basedir}/findbugs-exclude-filter.xml</excludeFilterFile>
-       </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.codehaus.mojo</groupId>
-        <artifactId>cobertura-maven-plugin</artifactId>
-        <version>2.3</version>
-      </plugin>
-      <plugin>
-        <groupId>org.codehaus.mojo</groupId>
-        <artifactId>clirr-maven-plugin</artifactId>
-        <version>2.2.2</version>
-        <configuration>
-          <comparisonArtifacts>
-            <comparisonArtifact>
-              <groupId>commons-lang</groupId>
-              <artifactId>commons-lang</artifactId>
-              <version>2.4</version>
-            </comparisonArtifact>
-          </comparisonArtifacts>
-          <minSeverity>info</minSeverity>
-        </configuration>
-      </plugin>
-      <plugin>
-        <artifactId>maven-pmd-plugin</artifactId>
-        <version>2.3</version>
-        <configuration>
-          <targetJdk>${maven.compile.target}</targetJdk>  
-        </configuration>
-        <reportSets>
-          <reportSet>
-            <reports>
-              <report>pmd</report>
-              <report>cpd</report>
-            </reports>
-          </reportSet>
-        </reportSets>
-      </plugin>
-      <plugin>
-        <groupId>org.codehaus.mojo</groupId>
-        <artifactId>taglist-maven-plugin</artifactId>
-        <version>2.4</version>
-      </plugin>
-      <plugin>
-        <groupId>org.codehaus.mojo</groupId>
-        <artifactId>javancss-maven-plugin</artifactId>
-        <version>2.0</version>
-      </plugin>
-    </plugins>
-  </reporting>
-
+	<url>http://commons.apache.org/lang/</url>
+	<issueManagement>
+		<system>jira</system>
+		<url>http://issues.apache.org/jira/browse/LANG</url>
+	</issueManagement>
+	<scm>
+		<connection>scm:svn:http://svn.apache.org/repos/asf/commons/proper/lang/trunk</connection>
+		<developerConnection>scm:svn:https://svn.apache.org/repos/asf/commons/proper/lang/trunk</developerConnection>
+		<url>http://svn.apache.org/viewvc/commons/proper/lang/trunk</url>
+	</scm>
+	<developers>
+		<developer>
+			<name>Daniel Rall</name>
+			<id>dlr</id>
+			<email>dlr@finemaltcoding.com</email>
+			<organization>CollabNet, Inc.</organization>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Stephen Colebourne</name>
+			<id>scolebourne</id>
+			<email>scolebourne@joda.org</email>
+			<organization>SITA ATS Ltd</organization>
+			<timezone>0</timezone>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Henri Yandell</name>
+			<id>bayard</id>
+			<email>bayard@apache.org</email>
+			<organization/>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Steven Caswell</name>
+			<id>scaswell</id>
+			<email>stevencaswell@apache.org</email>
+			<organization/>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+			<timezone>-5</timezone>
+		</developer>
+		<developer>
+			<name>Robert Burrell Donkin</name>
+			<id>rdonkin</id>
+			<email>rdonkin@apache.org</email>
+			<organization/>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Gary D. Gregory</name>
+			<id>ggregory</id>
+			<email>ggregory@seagullsw.com</email>
+			<organization>Seagull Software</organization>
+			<timezone>-8</timezone>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Phil Steitz</name>
+			<id>psteitz</id>
+			<email>phil@steitz.com</email>
+			<organization/>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Fredrik Westermarck</name>
+			<id>fredrik</id>
+			<email/>
+			<organization/>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>James Carman</name>
+			<id>jcarman</id>
+			<email>jcarman@apache.org</email>
+			<organization>Carman Consulting, Inc.</organization>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Niall Pemberton</name>
+			<id>niallp</id>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Matt Benson</name>
+			<id>mbenson</id>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Joerg Schaible</name>
+			<id>joehni</id>
+			<email>joerg.schaible@gmx.de</email>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+			<timezone>+1</timezone>
+		</developer>
+		<developer>
+			<name>Oliver Heger</name>
+			<id>oheger</id>
+			<email>oheger@apache.org</email>
+			<timezone>+1</timezone>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+		<developer>
+			<name>Paul Benedict</name>
+			<id>pbenedict</id>
+			<email>pbenedict@apache.org</email>
+			<roles>
+				<role>Java Developer</role>
+			</roles>
+		</developer>
+	</developers>
+	<contributors>
+		<contributor>
+			<name>C. Scott Ananian</name>
+		</contributor>
+		<contributor>
+			<name>Chris Audley</name>
+		</contributor>
+		<contributor>
+			<name>Stephane Bailliez</name>
+		</contributor>
+		<contributor>
+			<name>Michael Becke</name>
+		</contributor>
+		<contributor>
+			<name>Benjamin Bentmann</name>
+		</contributor>
+		<contributor>
+			<name>Ola Berg</name>
+		</contributor>
+		<contributor>
+			<name>Nathan Beyer</name>
+		</contributor>
+		<contributor>
+			<name>Stefan Bodewig</name>
+		</contributor>
+		<contributor>
+			<name>Janek Bogucki</name>
+		</contributor>
+		<contributor>
+			<name>Mike Bowler</name>
+		</contributor>
+		<contributor>
+			<name>Sean Brown</name>
+		</contributor>
+		<contributor>
+			<name>Alexander Day Chaffee</name>
+		</contributor>
+		<contributor>
+			<name>Al Chou</name>
+		</contributor>
+		<contributor>
+			<name>Greg Coladonato</name>
+		</contributor>
+		<contributor>
+			<name>Maarten Coene</name>
+		</contributor>
+		<contributor>
+			<name>Justin Couch</name>
+		</contributor>
+		<contributor>
+			<name>Michael Davey</name>
+		</contributor>
+		<contributor>
+			<name>Norm Deane</name>
+		</contributor>
+		<contributor>
+			<name>Ringo De Smet</name>
+		</contributor>
+		<contributor>
+			<name>Russel Dittmar</name>
+		</contributor>
+		<contributor>
+			<name>Steve Downey</name>
+		</contributor>
+		<contributor>
+			<name>Matthias Eichel</name>
+		</contributor>
+		<contributor>
+			<name>Christopher Elkins</name>
+		</contributor>
+		<contributor>
+			<name>Chris Feldhacker</name>
+		</contributor>
+		<contributor>
+			<name>Pete Gieser</name>
+		</contributor>
+		<contributor>
+			<name>Jason Gritman</name>
+		</contributor>
+		<contributor>
+			<name>Matthew Hawthorne</name>
+		</contributor>
+		<contributor>
+			<name>Michael Heuer</name>
+		</contributor>
+		<contributor>
+			<name>Chris Hyzer</name>
+		</contributor>
+		<contributor>
+			<name>Marc Johnson</name>
+		</contributor>
+		<contributor>
+			<name>Shaun Kalley</name>
+		</contributor>
+		<contributor>
+			<name>Tetsuya Kaneuchi</name>
+		</contributor>
+		<contributor>
+			<name>Nissim Karpenstein</name>
+		</contributor>
+		<contributor>
+			<name>Ed Korthof</name>
+		</contributor>
+		<contributor>
+			<name>Holger Krauth</name>
+		</contributor>
+		<contributor>
+			<name>Rafal Krupinski</name>
+		</contributor>
+		<contributor>
+			<name>Rafal Krzewski</name>
+		</contributor>
+		<contributor>
+			<name>Craig R. McClanahan</name>
+		</contributor>
+		<contributor>
+			<name>Rand McNeely</name>
+		</contributor>
+		<contributor>
+			<name>Hendrik Maryns</name>
+		</contributor>
+		<contributor>
+			<name>Dave Meikle</name>
+		</contributor>
+		<contributor>
+			<name>Nikolay Metchev</name>
+		</contributor>
+		<contributor>
+			<name>Kasper Nielsen</name>
+		</contributor>
+		<contributor>
+			<name>Tim O'Brien</name>
+		</contributor>
+		<contributor>
+			<name>Brian S O'Neill</name>
+		</contributor>
+		<contributor>
+			<name>Andrew C. Oliver</name>
+		</contributor>
+		<contributor>
+			<name>Alban Peignier</name>
+		</contributor>
+		<contributor>
+			<name>Moritz Petersen</name>
+		</contributor>
+		<contributor>
+			<name>Dmitri Plotnikov</name>
+		</contributor>
+		<contributor>
+			<name>Neeme Praks</name>
+		</contributor>
+		<contributor>
+			<name>Eric Pugh</name>
+		</contributor>
+		<contributor>
+			<name>Stephen Putman</name>
+		</contributor>
+		<contributor>
+			<name>Travis Reeder</name>
+		</contributor>
+		<contributor>
+			<name>Antony Riley</name>
+		</contributor>
+		<contributor>
+			<name>Valentin Rocher</name>
+		</contributor>
+		<contributor>
+			<name>Scott Sanders</name>
+		</contributor>
+		<contributor>
+			<name>Ralph Schaer</name>
+		</contributor>
+		<contributor>
+			<name>Henning P. Schmiedehausen</name>
+		</contributor>
+		<contributor>
+			<name>Sean Schofield</name>
+		</contributor>
+		<contributor>
+			<name>Robert Scholte</name>
+		</contributor>
+		<contributor>
+			<name>Reuben Sivan</name>
+		</contributor>
+		<contributor>
+			<name>Ville Skytta</name>
+		</contributor>
+		<contributor>
+			<name>Jan Sorensen</name>
+		</contributor>
+		<contributor>
+			<name>Glen Stampoultzis</name>
+		</contributor>
+		<contributor>
+			<name>Scott Stanchfield</name>
+		</contributor>
+		<contributor>
+			<name>Jon S. Stevens</name>
+		</contributor>
+		<contributor>
+			<name>Sean C. Sullivan</name>
+		</contributor>
+		<contributor>
+			<name>Ashwin Suresh</name>
+		</contributor>
+		<contributor>
+			<name>Helge Tesgaard</name>
+		</contributor>
+		<contributor>
+			<name>Arun Mammen Thomas</name>
+		</contributor>
+		<contributor>
+			<name>Masato Tezuka</name>
+		</contributor>
+		<contributor>
+			<name>Jeff Varszegi</name>
+		</contributor>
+		<contributor>
+			<name>Chris Webb</name>
+		</contributor>
+		<contributor>
+			<name>Mario Winterer</name>
+		</contributor>
+		<contributor>
+			<name>Stepan Koltsov</name>
+		</contributor>
+		<contributor>
+			<name>Holger Hoffstatte</name>
+		</contributor>
+		<contributor>
+			<name>Derek C. Ashmore</name>
+		</contributor>
+	</contributors>
+	<dependencies>
+		<dependency>
+			<groupId>junit</groupId>
+			<artifactId>junit</artifactId>
+			<version>4.12</version>
+			<scope>test</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.easymock</groupId>
+			<artifactId>easymock</artifactId>
+			<version>2.5.2</version>
+			<scope>test</scope>
+		</dependency>
+		<dependency>
+			<artifactId>evosuite-standalone-runtime</artifactId>
+			<groupId>org.evosuite</groupId>
+			<version>${evosuiteVersion}</version>
+		</dependency>
+		<dependency>
+			<artifactId>xercesImpl</artifactId>
+			<groupId>xerces</groupId>
+			<version>2.11.0</version>
+		</dependency>
+	</dependencies>
+	<properties>
+		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
+		<maven.compile.source>1.5</maven.compile.source>
+		<maven.compile.target>1.5</maven.compile.target>
+		<commons.componentid>lang</commons.componentid>
+		<commons.release.version>2.5</commons.release.version>
+		<commons.jira.id>LANG</commons.jira.id>
+		<commons.jira.pid>12310481</commons.jira.pid>
+		<evosuiteVersion>1.0.6</evosuiteVersion>
+	</properties>
+	 
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-surefire-plugin</artifactId>
+				<configuration>
+					<includes>
+						<include>**/*Test.java</include>
+					</includes>
+					<excludes>
+						<exclude>**/*TestSuite.java</exclude>
+						<exclude>**/AllLangTestSuite.java</exclude>
+					</excludes>
+					<properties>
+						<property>
+							<name>listener</name>
+							<value>org.evosuite.runtime.InitializingListener</value>
+						</property>
+					</properties>
+				</configuration>
+				<version>2.17</version>
+			</plugin>
+			<plugin>
+				<artifactId>maven-assembly-plugin</artifactId>
+				<configuration>
+					<descriptors>
+						<descriptor>src/assembly/bin.xml</descriptor>
+						<descriptor>src/assembly/src.xml</descriptor>
+					</descriptors>
+					<tarLongFileMode>gnu</tarLongFileMode>
+				</configuration>
+			</plugin>
+			<plugin>
+				<artifactId>evosuite-maven-plugin</artifactId>
+				<groupId>org.evosuite.plugins</groupId>
+				<version>${evosuiteVersion}</version>
+				<executions>
+					<execution>
+						<goals>
+							<goal>prepare</goal>
+						</goals>
+						<phase>process-test-classes</phase>
+					</execution>
+				</executions>
+			</plugin>
+		</plugins>
+	</build>
+	<reporting>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-changes-plugin</artifactId>
+				<version>2.0</version>
+				<configuration>
+					<xmlPath>${basedir}/src/site/changes/changes.xml</xmlPath>
+					<issueLinkTemplate>%URL%/%ISSUE%</issueLinkTemplate>
+				</configuration>
+				<reportSets>
+					<reportSet>
+						<reports>
+							<report>changes-report</report>
+						</reports>
+					</reportSet>
+				</reportSets>
+			</plugin>
+			<plugin>
+				<artifactId>maven-checkstyle-plugin</artifactId>
+				<version>2.3</version>
+				<configuration>
+					<configLocation>${basedir}/checkstyle.xml</configLocation>
+					<enableRulesSummary>false</enableRulesSummary>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>findbugs-maven-plugin</artifactId>
+				<version>1.2</version>
+				<configuration>
+					<threshold>Normal</threshold>
+					<effort>Default</effort>
+					<excludeFilterFile>${basedir}/findbugs-exclude-filter.xml</excludeFilterFile>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>cobertura-maven-plugin</artifactId>
+				<version>2.3</version>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>clirr-maven-plugin</artifactId>
+				<version>2.2.2</version>
+				<configuration>
+					<comparisonArtifacts>
+						<comparisonArtifact>
+							<groupId>commons-lang</groupId>
+							<artifactId>commons-lang</artifactId>
+							<version>2.4</version>
+						</comparisonArtifact>
+					</comparisonArtifacts>
+					<minSeverity>info</minSeverity>
+				</configuration>
+			</plugin>
+			<plugin>
+				<artifactId>maven-pmd-plugin</artifactId>
+				<version>2.3</version>
+				<configuration>
+					<targetJdk>${maven.compile.target}</targetJdk>
+					  
+				</configuration>
+				<reportSets>
+					<reportSet>
+						<reports>
+							<report>pmd</report>
+							<report>cpd</report>
+						</reports>
+					</reportSet>
+				</reportSets>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>taglist-maven-plugin</artifactId>
+				<version>2.4</version>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>javancss-maven-plugin</artifactId>
+				<version>2.0</version>
+			</plugin>
+		</plugins>
+	</reporting>
 </project>
diff --git a/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java b/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
index 10a9492cb..b6bbf8ffb 100644
--- a/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java
@@ -207,22 +207,22 @@ public class SystemUtilsTest extends TestCase {
     }
 
     public void testJavaVersionAsInt() {
-        assertEquals(0, SystemUtils.toJavaVersionInt(null), 0.000001f);
-        assertEquals(0, SystemUtils.toJavaVersionInt(""), 0.000001f);
-        assertEquals(0, SystemUtils.toJavaVersionInt("0"), 0.000001f);
-        assertEquals(110, SystemUtils.toJavaVersionInt("1.1"), 0.000001f);
-        assertEquals(120, SystemUtils.toJavaVersionInt("1.2"), 0.000001f);
-        assertEquals(130, SystemUtils.toJavaVersionInt("1.3.0"), 0.000001f);
-        assertEquals(131, SystemUtils.toJavaVersionInt("1.3.1"), 0.000001f);
-        assertEquals(140, SystemUtils.toJavaVersionInt("1.4.0"), 0.000001f);
-        assertEquals(141, SystemUtils.toJavaVersionInt("1.4.1"), 0.000001f);
-        assertEquals(142, SystemUtils.toJavaVersionInt("1.4.2"), 0.000001f);
-        assertEquals(150, SystemUtils.toJavaVersionInt("1.5.0"), 0.000001f);
-        assertEquals(160, SystemUtils.toJavaVersionInt("1.6.0"), 0.000001f);
-        assertEquals(131, SystemUtils.toJavaVersionInt("JavaVM-1.3.1"), 0.000001f);
-        assertEquals(131, SystemUtils.toJavaVersionInt("1.3.1 subset"), 0.000001f);
+        assertEquals(0, SystemUtils.toJavaVersionInt(null));
+        assertEquals(0, SystemUtils.toJavaVersionInt(""));
+        assertEquals(0, SystemUtils.toJavaVersionInt("0"));
+        assertEquals(110, SystemUtils.toJavaVersionInt("1.1"));
+        assertEquals(120, SystemUtils.toJavaVersionInt("1.2"));
+        assertEquals(130, SystemUtils.toJavaVersionInt("1.3.0"));
+        assertEquals(131, SystemUtils.toJavaVersionInt("1.3.1"));
+        assertEquals(140, SystemUtils.toJavaVersionInt("1.4.0"));
+        assertEquals(141, SystemUtils.toJavaVersionInt("1.4.1"));
+        assertEquals(142, SystemUtils.toJavaVersionInt("1.4.2"));
+        assertEquals(150, SystemUtils.toJavaVersionInt("1.5.0"));
+        assertEquals(160, SystemUtils.toJavaVersionInt("1.6.0"));
+        assertEquals(131, SystemUtils.toJavaVersionInt("JavaVM-1.3.1"));
+        assertEquals(131, SystemUtils.toJavaVersionInt("1.3.1 subset"));
         // This used to return 0f in [lang] version 2.5:
-        assertEquals(130, SystemUtils.toJavaVersionInt("XXX-1.3.x"), 0.000001f);
+        assertEquals(130, SystemUtils.toJavaVersionInt("XXX-1.3.x"));
     }
 
     public void testJavaVersionAtLeastFloat() {
diff --git a/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest.java b/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest.java
new file mode 100644
index 000000000..33f026ae7
--- /dev/null
+++ b/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest.java
@@ -0,0 +1,331 @@
+/*
+ * This file was automatically generated by EvoSuite
+ * Mon Sep 16 07:37:26 GMT 2019
+ */
+
+package org.apache.commons.lang3;
+
+import org.junit.Test;
+import static org.junit.Assert.*;
+import static org.evosuite.runtime.EvoAssertions.*;
+import java.io.File;
+import org.apache.commons.lang3.SystemUtils;
+import org.evosuite.runtime.EvoRunner;
+import org.evosuite.runtime.EvoRunnerParameters;
+import org.junit.runner.RunWith;
+
+@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
+public class SystemUtils_ESTest extends SystemUtils_ESTest_scaffolding {
+
+  @Test(timeout = 4000)
+  public void test00()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.toJavaVersionIntArray("C:UsersamirelmAppDataLocalTempEvoSuite_pathingJar1456896094494055472.jar");
+        fail("Expecting exception: NumberFormatException");
+      
+      } catch(NumberFormatException e) {
+         //
+         // For input string: \"1456896094494055472\"
+         //
+         verifyException("java.lang.NumberFormatException", e);
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test01()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.toJavaVersionInt("C:UsersamirelmAppDataLocalTempEvoSuite_pathingJar1456896094494055472.jar");
+        fail("Expecting exception: NumberFormatException");
+      
+      } catch(NumberFormatException e) {
+         //
+         // For input string: \"1456896094494055472\"
+         //
+         verifyException("java.lang.NumberFormatException", e);
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test02()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.toJavaVersionFloat("C:UsersamirelmAppDataLocalTempEvoSuite_pathingJar1456896094494055472.jar");
+        fail("Expecting exception: NumberFormatException");
+      
+      } catch(NumberFormatException e) {
+         //
+         // For input string: \"1456896094494055472\"
+         //
+         verifyException("java.lang.NumberFormatException", e);
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test03()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.isOSNameMatch("Arguments cannot both be null", (String) null);
+        fail("Expecting exception: NullPointerException");
+      
+      } catch(NullPointerException e) {
+         //
+         // no message in exception (getMessage() returned null)
+         //
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test04()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.isOSMatch("java.awt.graphicsenv", "", (String) null, "Wbk(");
+        fail("Expecting exception: NullPointerException");
+      
+      } catch(NullPointerException e) {
+         //
+         // no message in exception (getMessage() returned null)
+         //
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test05()  throws Throwable  {
+      // Undeclared exception!
+      try { 
+        SystemUtils.isJavaVersionMatch("AIXWindows 10", (String) null);
+        fail("Expecting exception: NullPointerException");
+      
+      } catch(NullPointerException e) {
+         //
+         // no message in exception (getMessage() returned null)
+         //
+      }
+  }
+
+  @Test(timeout = 4000)
+  public void test06()  throws Throwable  {
+      float float0 = SystemUtils.toJavaVersionFloat("");
+      assertEquals(0.0F, float0, 0.01F);
+  }
+
+  @Test(timeout = 4000)
+  public void test07()  throws Throwable  {
+      float float0 = SystemUtils.toJavaVersionFloat("$k8xm,4@");
+      assertEquals(8.4F, float0, 0.01F);
+  }
+
+  @Test(timeout = 4000)
+  public void test08()  throws Throwable  {
+      int int0 = SystemUtils.toJavaVersionInt("+{h6FX[3~opg0z0x");
+      assertEquals(630, int0);
+  }
+
+  @Test(timeout = 4000)
+  public void test09()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSNameMatch((String) null, "hyX?N]ke7\"%{`9(");
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test10()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSMatch("Mac OS XWindows 10", "Mac OS XWindows 10", "Mac OS XWindows 10", "The Array must not be null");
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test11()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSMatch("sun.awt.windows.WPrinterJob", "9q*Wlz5I{E;HQ;eB", "Oracle Corporation", (String) null);
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test12()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSMatch("", (String) null, (String) null, "ER*M(^_v*`+");
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test13()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSMatch("$k8xm,4@", "$k8xm,4@", "$k8xm,4@", "$k8xm,4@");
+      assertTrue(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test14()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isOSMatch((String) null, "java.specification.vendor", "/:d)jsD;\" j!e^[w", "C:Usersamirelm");
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test15()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaVersionMatch((String) null, "\n5j}O");
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test16()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaVersionAtLeast(57);
+      assertTrue(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test17()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaVersionAtLeast(840);
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test18()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaVersionAtLeast((float) 0);
+      assertTrue(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test19()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaVersionAtLeast(8.4F);
+      assertFalse(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test20()  throws Throwable  {
+      boolean boolean0 = SystemUtils.isJavaAwtHeadless();
+      assertTrue(boolean0);
+  }
+
+  @Test(timeout = 4000)
+  public void test21()  throws Throwable  {
+      SystemUtils systemUtils0 = new SystemUtils();
+      assertEquals(1.8F, SystemUtils.JAVA_VERSION_FLOAT, 0.01F);
+      assertFalse(SystemUtils.IS_OS_UNIX);
+      assertFalse(SystemUtils.IS_OS_OS2);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_ME);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_NT);
+      assertFalse(SystemUtils.IS_OS_SUN_OS);
+      assertFalse(SystemUtils.IS_OS_SOLARIS);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_2000);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_98);
+      assertFalse(SystemUtils.IS_OS_HP_UX);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_95);
+      assertFalse(SystemUtils.IS_OS_AIX);
+      assertFalse(SystemUtils.IS_OS_MAC);
+      assertFalse(SystemUtils.IS_JAVA_1_6);
+      assertFalse(SystemUtils.IS_JAVA_1_7);
+      assertFalse(SystemUtils.IS_OS_IRIX);
+      assertTrue(SystemUtils.IS_OS_WINDOWS);
+      assertFalse(SystemUtils.IS_JAVA_1_1);
+      assertFalse(SystemUtils.IS_JAVA_1_4);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_XP);
+      assertFalse(SystemUtils.IS_JAVA_1_5);
+      assertFalse(SystemUtils.IS_JAVA_1_2);
+      assertFalse(SystemUtils.IS_JAVA_1_3);
+      assertFalse(SystemUtils.IS_OS_MAC_OSX);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_7);
+      assertFalse(SystemUtils.IS_OS_LINUX);
+      assertEquals(180, SystemUtils.JAVA_VERSION_INT);
+      assertFalse(SystemUtils.IS_OS_WINDOWS_VISTA);
+      assertTrue(systemUtils0.isJavaAwtHeadless());
+      assertNotNull(systemUtils0);
+  }
+
+  @Test(timeout = 4000)
+  public void test22()  throws Throwable  {
+      File file0 = SystemUtils.getUserHome();
+      assertFalse(file0.isFile());
+      assertTrue(file0.isAbsolute());
+      assertTrue(file0.canExecute());
+      assertEquals("C:\\Users", file0.getParent());
+      assertEquals(0L, file0.length());
+      assertTrue(file0.canRead());
+      assertTrue(file0.exists());
+      assertEquals(1392409281320L, file0.lastModified());
+      assertEquals(0L, file0.getTotalSpace());
+      assertEquals("amirelm", file0.getName());
+      assertEquals("C:\\Users\\amirelm", file0.toString());
+      assertFalse(file0.isHidden());
+      assertEquals(0L, file0.getFreeSpace());
+      assertTrue(file0.canWrite());
+      assertEquals(0L, file0.getUsableSpace());
+      assertTrue(file0.isDirectory());
+      assertNotNull(file0);
+  }
+
+  @Test(timeout = 4000)
+  public void test23()  throws Throwable  {
+      File file0 = SystemUtils.getUserDir();
+      assertEquals("commons-lang", file0.getName());
+      assertEquals("C:\\Users\\amirelm\\Code\\rotem\\BugMiner\\tests\\tested_project", file0.getParent());
+      assertTrue(file0.canWrite());
+      assertFalse(file0.isHidden());
+      assertEquals(0L, file0.getUsableSpace());
+      assertFalse(file0.isFile());
+      assertTrue(file0.isDirectory());
+      assertEquals(0L, file0.getTotalSpace());
+      assertTrue(file0.isAbsolute());
+      assertEquals(1392409281320L, file0.lastModified());
+      assertEquals(0L, file0.getFreeSpace());
+      assertTrue(file0.exists());
+      assertTrue(file0.canRead());
+      assertEquals(0L, file0.length());
+      assertEquals("C:\\Users\\amirelm\\Code\\rotem\\BugMiner\\tests\\tested_project\\commons-lang", file0.toString());
+      assertTrue(file0.canExecute());
+      assertNotNull(file0);
+  }
+
+  @Test(timeout = 4000)
+  public void test24()  throws Throwable  {
+      File file0 = SystemUtils.getJavaHome();
+      assertFalse(file0.canExecute());
+      assertFalse(file0.canRead());
+      assertEquals(0L, file0.getTotalSpace());
+      assertEquals(0L, file0.getFreeSpace());
+      assertEquals("C:\\Program Files\\Java\\jdk1.8.0_181", file0.getParent());
+      assertTrue(file0.isAbsolute());
+      assertFalse(file0.isDirectory());
+      assertEquals("C:\\Program Files\\Java\\jdk1.8.0_181\\jre", file0.toString());
+      assertEquals(0L, file0.lastModified());
+      assertFalse(file0.canWrite());
+      assertEquals(0L, file0.length());
+      assertEquals("jre", file0.getName());
+      assertTrue(file0.isFile());
+      assertFalse(file0.isHidden());
+      assertEquals(0L, file0.getUsableSpace());
+      assertFalse(file0.exists());
+      assertNotNull(file0);
+  }
+
+  @Test(timeout = 4000)
+  public void test25()  throws Throwable  {
+      File file0 = SystemUtils.getJavaIoTmpDir();
+      assertEquals(0L, file0.getUsableSpace());
+      assertEquals(1392409281320L, file0.lastModified());
+      assertTrue(file0.canRead());
+      assertTrue(file0.exists());
+      assertFalse(file0.isFile());
+      assertTrue(file0.isDirectory());
+      assertEquals(0L, file0.getTotalSpace());
+      assertTrue(file0.canExecute());
+      assertEquals("C:\\Users\\amirelm\\AppData\\Local", file0.getParent());
+      assertEquals(0L, file0.length());
+      assertFalse(file0.isHidden());
+      assertTrue(file0.isAbsolute());
+      assertEquals("C:\\Users\\amirelm\\AppData\\Local\\Temp", file0.toString());
+      assertEquals(0L, file0.getFreeSpace());
+      assertEquals("Temp", file0.getName());
+      assertTrue(file0.canWrite());
+      assertNotNull(file0);
+  }
+
+  @Test(timeout = 4000)
+  public void test26()  throws Throwable  {
+      int int0 = SystemUtils.toJavaVersionInt("Windo");
+      assertEquals(0, int0);
+  }
+
+  @Test(timeout = 4000)
+  public void test27()  throws Throwable  {
+      float float0 = SystemUtils.toJavaVersionFloat((String) null);
+      assertEquals(0.0F, float0, 0.01F);
+  }
+}
diff --git a/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest_scaffolding.java b/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest_scaffolding.java
new file mode 100644
index 000000000..2436c49a4
--- /dev/null
+++ b/src/test/java/org/apache/commons/lang3/SystemUtils_ESTest_scaffolding.java
@@ -0,0 +1,101 @@
+/**
+ * Scaffolding file used to store all the setups needed to run 
+ * tests automatically generated by EvoSuite
+ * Mon Sep 16 07:37:26 GMT 2019
+ */
+
+package org.apache.commons.lang3;
+
+import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
+import org.junit.BeforeClass;
+import org.junit.Before;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.evosuite.runtime.sandbox.Sandbox;
+import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
+
+@EvoSuiteClassExclude
+public class SystemUtils_ESTest_scaffolding {
+
+  @org.junit.Rule 
+  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
+
+  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
+
+  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
+
+
+  @BeforeClass 
+  public static void initEvoSuiteFramework() { 
+    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.SystemUtils"; 
+    org.evosuite.runtime.GuiSupport.initialize(); 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
+    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
+    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
+    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.init();
+    setSystemProperties();
+    initializeClasses();
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+  } 
+
+  @AfterClass 
+  public static void clearEvoSuiteFramework(){ 
+    Sandbox.resetDefaultSecurityManager(); 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+  } 
+
+  @Before 
+  public void initTestCase(){ 
+    threadStopper.storeCurrentThreads();
+    threadStopper.startRecordingTime();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
+    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
+    setSystemProperties(); 
+    org.evosuite.runtime.GuiSupport.setHeadless(); 
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
+  } 
+
+  @After 
+  public void doneWithTestCase(){ 
+    threadStopper.killAndJoinClientThreads();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
+    resetClasses(); 
+    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
+    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
+  } 
+
+  public static void setSystemProperties() {
+ 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+    java.lang.System.setProperty("file.encoding", "Cp1255"); 
+    java.lang.System.setProperty("java.awt.headless", "true"); 
+    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\amirelm\\AppData\\Local\\Temp\\"); 
+    java.lang.System.setProperty("user.country", "US"); 
+    java.lang.System.setProperty("user.dir", "C:\\Users\\amirelm\\Code\\rotem\\BugMiner\\tests\\tested_project\\commons-lang"); 
+    java.lang.System.setProperty("user.home", "C:\\Users\\amirelm"); 
+    java.lang.System.setProperty("user.language", "en"); 
+    java.lang.System.setProperty("user.name", "amirelm"); 
+    java.lang.System.setProperty("user.timezone", "Asia/Jerusalem"); 
+  }
+
+  private static void initializeClasses() {
+    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SystemUtils_ESTest_scaffolding.class.getClassLoader() ,
+      "org.apache.commons.lang3.SystemUtils",
+      "org.apache.commons.lang3.ArrayUtils"
+    );
+  } 
+
+  private static void resetClasses() {
+    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SystemUtils_ESTest_scaffolding.class.getClassLoader()); 
+
+    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
+      "org.apache.commons.lang3.SystemUtils",
+      "org.apache.commons.lang3.ArrayUtils"
+    );
+  }
+}
